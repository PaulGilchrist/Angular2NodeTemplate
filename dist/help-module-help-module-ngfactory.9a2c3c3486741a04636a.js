(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"+DDA":function(l,n,u){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.HelpModule=function(){}},"0b0p":function(l,n,u){"use strict";var e=u("4Vke"),t=u("CcnG"),d=u("XO/x"),o=u("aNMw"),a=u("Ip0R"),r=u("ZYCi"),i=u("3UxW"),s=t.\u0275crt({encapsulation:0,styles:[e.styles],data:{}});function c(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,2,"div",[["class","col-md-2 hidden-xs hidden-sm"]],null,null,null,null,null)),(l()(),t.\u0275eld(1,0,null,null,1,"help-nav",[],null,null,null,d.View_HelpNavComponent_0,d.RenderType_HelpNavComponent)),t.\u0275did(2,49152,null,0,o.HelpNavComponent,[a.Location,r.Router],null,null)],null,null)}function p(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,0,"i",[["class","affix fa hidden-xs hidden-sm"]],[[2,"fa-chevron-left",null],[2,"fa-chevron-right",null]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==l.component.toggleNav()&&e),e},null,null)),(l()(),t.\u0275eld(1,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(2,0,null,null,5,"div",[["class","row"]],null,null,null,null,null)),(l()(),t.\u0275and(16777216,null,null,1,null,c)),t.\u0275did(4,16384,null,0,a.NgIf,[t.ViewContainerRef,t.TemplateRef],{ngIf:[0,"ngIf"]},null),(l()(),t.\u0275eld(5,0,null,null,2,"div",[["class","col-xs-12"]],[[2,"col-md-10",null]],null,null,null,null)),(l()(),t.\u0275eld(6,16777216,null,null,1,"router-outlet",[],null,null,null,null,null)),t.\u0275did(7,212992,null,0,r.RouterOutlet,[r.ChildrenOutletContexts,t.ViewContainerRef,t.ComponentFactoryResolver,[8,null],t.ChangeDetectorRef],null,null)],function(l,n){l(n,4,0,n.component.showNav),l(n,7,0)},function(l,n){var u=n.component;l(n,0,0,u.showNav,!u.showNav),l(n,5,0,u.showNav)})}function h(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,1,"my-help",[],null,null,null,p,s)),t.\u0275did(1,114688,null,0,i.HelpComponent,[],null,null)],function(l,n){l(n,1,0)},null)}n.RenderType_HelpComponent=s,n.View_HelpComponent_0=p,n.View_HelpComponent_Host_0=h,n.HelpComponentNgFactory=t.\u0275ccf("my-help",i.HelpComponent,h,{},{},[])},"3UxW":function(l,n,u){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),u("CcnG"),n.HelpComponent=function(){function l(){this.showNav=!0}return l.prototype.toggleNav=function(){this.showNav=!this.showNav},l.prototype.ngOnInit=function(){window.appInsights.trackPageView("help-module/help.component")},l}()},"4Vke":function(l,n,u){"use strict";n.styles=["i[_ngcontent-%COMP%]{margin-left:-20px}"]},LqJJ:function(l,n,u){"use strict";n.styles=[".nav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{transition:.5s all}.nav[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{font-weight:700;letter-spacing:.075em;margin-left:-20px;transition:.5s all}"]},"XO/x":function(l,n,u){"use strict";var e=u("LqJJ"),t=u("CcnG"),d=u("ZYCi"),o=u("Ip0R"),a=u("aNMw"),r=t.\u0275crt({encapsulation:0,styles:[e.styles],data:{}});function i(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,50,"div",[],null,null,null,null,null)),(l()(),t.\u0275eld(1,0,null,null,49,"nav",[["class","affix animated slideInLeft"]],null,null,null,null,null)),(l()(),t.\u0275eld(2,0,null,null,48,"ul",[["class","nav nav-pills nav-stacked"]],null,null,null,null,null)),(l()(),t.\u0275eld(3,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(4,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,5).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(5,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(6,{id:0}),t.\u0275pad(7,1),(l()(),t.\u0275ted(-1,null,["Getting Started"])),(l()(),t.\u0275eld(9,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(10,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,11).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(11,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(12,{id:0}),t.\u0275pad(13,1),(l()(),t.\u0275ted(-1,null,["Client Libraries"])),(l()(),t.\u0275eld(15,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(16,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,17).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(17,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(18,{id:0}),t.\u0275pad(19,1),(l()(),t.\u0275ted(-1,null,["Server Libraries"])),(l()(),t.\u0275eld(21,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(22,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,23).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(23,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(24,{id:0}),t.\u0275pad(25,1),(l()(),t.\u0275ted(-1,null,["Gulp Commands"])),(l()(),t.\u0275eld(27,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(28,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,29).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(29,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(30,{id:0}),t.\u0275pad(31,1),(l()(),t.\u0275ted(-1,null,["NPM Commands"])),(l()(),t.\u0275eld(33,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(34,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,35).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(35,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(36,{id:0}),t.\u0275pad(37,1),(l()(),t.\u0275ted(-1,null,["Karma Commands"])),(l()(),t.\u0275eld(39,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(40,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,41).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(41,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(42,{id:0}),t.\u0275pad(43,1),(l()(),t.\u0275ted(-1,null,["VS Code Commands"])),(l()(),t.\u0275eld(45,0,null,null,5,"li",[],[[2,"active",null]],null,null,null,null)),(l()(),t.\u0275eld(46,0,null,null,4,"a",[],[[1,"target",0],[8,"href",4]],[[null,"click"]],function(l,n,u){var e=!0;return"click"===n&&(e=!1!==t.\u0275nov(l,47).onClick(u.button,u.ctrlKey,u.metaKey,u.shiftKey)&&e),e},null,null)),t.\u0275did(47,671744,null,0,d.RouterLinkWithHref,[d.Router,d.ActivatedRoute,o.LocationStrategy],{queryParams:[0,"queryParams"],routerLink:[1,"routerLink"]},null),t.\u0275pod(48,{id:0}),t.\u0275pad(49,1),(l()(),t.\u0275ted(-1,null,["Git Branching"]))],function(l,n){l(n,5,0,l(n,6,0,"gettingStarted"),l(n,7,0,"/help")),l(n,11,0,l(n,12,0,"clientLibraries"),l(n,13,0,"/help")),l(n,17,0,l(n,18,0,"serverLibraries"),l(n,19,0,"/help")),l(n,23,0,l(n,24,0,"gulpCommands"),l(n,25,0,"/help")),l(n,29,0,l(n,30,0,"npmCommands"),l(n,31,0,"/help")),l(n,35,0,l(n,36,0,"karmaCommands"),l(n,37,0,"/help")),l(n,41,0,l(n,42,0,"vsCodeCommands"),l(n,43,0,"/help")),l(n,47,0,l(n,48,0,"gitBranching"),l(n,49,0,"/help"))},function(l,n){var u=n.component;l(n,3,0,u.currentPage("/help")||u.currentPage("/help?id=gettingStarted")),l(n,4,0,t.\u0275nov(n,5).target,t.\u0275nov(n,5).href),l(n,9,0,u.currentPage("/help?id=clientLibraries")),l(n,10,0,t.\u0275nov(n,11).target,t.\u0275nov(n,11).href),l(n,15,0,u.currentPage("/help?id=serverLibraries")),l(n,16,0,t.\u0275nov(n,17).target,t.\u0275nov(n,17).href),l(n,21,0,u.currentPage("/help?id=gulpCommands")),l(n,22,0,t.\u0275nov(n,23).target,t.\u0275nov(n,23).href),l(n,27,0,u.currentPage("/help?id=npmCommands")),l(n,28,0,t.\u0275nov(n,29).target,t.\u0275nov(n,29).href),l(n,33,0,u.currentPage("/help?id=karmaCommands")),l(n,34,0,t.\u0275nov(n,35).target,t.\u0275nov(n,35).href),l(n,39,0,u.currentPage("/help?id=vsCodeCommands")),l(n,40,0,t.\u0275nov(n,41).target,t.\u0275nov(n,41).href),l(n,45,0,u.currentPage("/help?id=gitBranching")),l(n,46,0,t.\u0275nov(n,47).target,t.\u0275nov(n,47).href)})}function s(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,1,"help-nav",[],null,null,null,i,r)),t.\u0275did(1,49152,null,0,a.HelpNavComponent,[o.Location,d.Router],null,null)],null,null)}n.RenderType_HelpNavComponent=r,n.View_HelpNavComponent_0=i,n.View_HelpNavComponent_Host_0=s,n.HelpNavComponentNgFactory=t.\u0275ccf("help-nav",a.HelpNavComponent,s,{},{},[])},aNMw:function(l,n,u){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),u("ZYCi"),u("Ip0R"),n.HelpNavComponent=function(){function l(l,n){this._location=l,this._router=n}return l.prototype.currentPage=function(l){var n=this._location.path();return 0===l.length?0===n.length:n===l},l}()},iTxc:function(l,n,u){"use strict";n.styles=[".inline-block[_ngcontent-%COMP%]{display:inline-block}"]},m3dN:function(l,n,u){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),u("CcnG"),u("ZYCi"),n.HelpHomeComponent=function(){function l(l,n){this._route=l,this._router=n}return l.prototype.ngOnInit=function(){this.sub=this._router.routerState.root.queryParams.subscribe(function(l){var n=l.id;if(n){$("#"+n)[0].scrollIntoView();var u=-60;"gettingStarted"===n&&(u=-80),window.scrollBy(0,u)}})},l.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),window.scrollBy(0,-60)},l}()},tCwb:function(l,n,u){"use strict";var e=u("CcnG"),t=u("+DDA"),d=u("pMnS"),o=u("0b0p"),a=u("ttWq"),r=u("Ip0R"),i=u("ZYCi"),s=u("3UxW"),c=u("m3dN");n.HelpModuleNgFactory=e.\u0275cmf(t.HelpModule,[],function(l){return e.\u0275mod([e.\u0275mpd(512,e.ComponentFactoryResolver,e.\u0275CodegenComponentFactoryResolver,[[8,[d.\u0275EmptyOutletComponentNgFactory,o.HelpComponentNgFactory,a.HelpHomeComponentNgFactory]],[3,e.ComponentFactoryResolver],e.NgModuleRef]),e.\u0275mpd(4608,r.NgLocalization,r.NgLocaleLocalization,[e.LOCALE_ID,[2,r.\u0275angular_packages_common_common_a]]),e.\u0275mpd(4608,r.LocationStrategy,r.HashLocationStrategy,[r.PlatformLocation,[2,r.APP_BASE_HREF]]),e.\u0275mpd(1073742336,r.CommonModule,r.CommonModule,[]),e.\u0275mpd(1073742336,i.RouterModule,i.RouterModule,[[2,i.\u0275angular_packages_router_router_a],[2,i.Router]]),e.\u0275mpd(1073742336,t.HelpModule,t.HelpModule,[]),e.\u0275mpd(1024,i.ROUTES,function(){return[[{path:"",component:s.HelpComponent,children:[{path:"",component:c.HelpHomeComponent}]}]]},[])])})},ttWq:function(l,n,u){"use strict";var e=u("iTxc"),t=u("CcnG"),d=u("m3dN"),o=u("ZYCi"),a=t.\u0275crt({encapsulation:0,styles:[e.styles],data:{}});function r(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,408,"article",[],null,null,null,null,null)),(l()(),t.\u0275eld(1,0,null,null,1,"h3",[["id","gettingStarted"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Getting Started"])),(l()(),t.\u0275ted(-1,null,[" This template is designed to work primarily on Visual Studio 2015 and Visual Studio Code, but has been developed using all cross platform libraries and can be hosted with either Node or .Net core. This means code editors such as Atom, Sublime, or even something as simple as NotePad++ could be used. Even if this template will be hosted using .Net core or another non Node server, NodeJS will still need to be installed to support package management (npm), task workflows (gulp), and their supporting tools. You can download and install NodeJS from here\u2026"])),(l()(),t.\u0275eld(4,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(5,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,[" \xa0\xa0\xa0\xa0\xa0"])),(l()(),t.\u0275eld(7,0,null,null,1,"a",[["href","https://nodejs.org/en/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["https://nodejs.org"])),(l()(),t.\u0275eld(9,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(10,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(11,0,null,null,0,"img",[["class","img-responsive inline-block animated slideInRight"],["src","./assets/asp-net-angular2-300x176.jpg"],["style","float:right"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,[" After installing node, open a command prompt at the project root folder (src\\Angular2Template) and run \u201cnpm install\u201d. This command will read the \u201cpackage.json\u201d file and download and install all the referenced packages. At this point, the application will run using a mock service for supplying user and address data. The template also comes with a service that gets its data from a backend API instead of mocking the data. If you are also implementing the GitHub solution named "])),(l()(),t.\u0275eld(13,0,null,null,1,"a",[["href","https://github.com/PaulGilchrist/ApiTemplate"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["\u201cApiTemplate\u201d"])),(l()(),t.\u0275ted(-1,null,[", you can follow these steps to switch from mock data to API accessed data:"])),(l()(),t.\u0275eld(16,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(17,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(18,0,null,null,8,"ol",[],null,null,null,null,null)),(l()(),t.\u0275eld(19,0,null,null,1,"li",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["From the folder \u201capp/services\u201d, rename \u201cuser.service.ts\u201d to \u201cmock-user.service.ts\u201d"])),(l()(),t.\u0275eld(21,0,null,null,1,"li",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["From the folder \u201capp/services\u201d, rename \u201capi-user.service.ts\u201d to \u201cuser.service.ts\u201d"])),(l()(),t.\u0275eld(23,0,null,null,1,"li",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Edit \u201capp/data/config.data.ts\u201d variable \u201capiUrl\u201d to the location you are hosting the API template"])),(l()(),t.\u0275eld(25,0,null,null,1,"li",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Rebuild the application (gulp rebuild)"])),(l()(),t.\u0275ted(-1,null,[" This application also supports OAuth 2.0 implicit flow token for communication with the API. Authentication is supported but not required for template usage. Enabling authentication support, requires editing the \u201cauthProvider\u201d variable in the same config file as above to your OAuth service provider information."])),(l()(),t.\u0275eld(28,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(29,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(30,0,null,null,1,"h3",[["id","clientLibraries"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Client Libraries"])),(l()(),t.\u0275ted(-1,null,[" Below is a list of the main client side JavaScript and CSS libraries used in this template, and links to where you can learn more about them."])),(l()(),t.\u0275eld(33,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(34,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(35,0,null,null,80,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(36,0,null,null,79,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(37,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(38,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(39,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Library"])),(l()(),t.\u0275eld(41,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(43,0,null,null,72,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(44,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(45,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(46,0,null,null,1,"a",[["href","https://angular.io/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Angular 2"])),(l()(),t.\u0275eld(48,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["MVC Framework"])),(l()(),t.\u0275eld(50,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(51,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(52,0,null,null,1,"a",[["href","https://daneden.github.io/animate.css/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Animate.css"])),(l()(),t.\u0275eld(54,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["CSS3 animations"])),(l()(),t.\u0275eld(56,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(57,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(58,0,null,null,1,"a",[["href","http://getbootstrap.com/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Bootstrap"])),(l()(),t.\u0275eld(60,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["CSS framework focused on responsive, mobile first design"])),(l()(),t.\u0275eld(62,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(63,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(64,0,null,null,1,"a",[["href","https://d3js.org/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["D3"])),(l()(),t.\u0275eld(66,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Scalar Vector Graphics (SVG) library for data-driven visualizations"])),(l()(),t.\u0275eld(68,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(69,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(70,0,null,null,1,"a",[["href","http://bevacqua.github.io/dragula/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Dragula"])),(l()(),t.\u0275eld(72,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Drag and drop library with good visual feedback and touch support"])),(l()(),t.\u0275eld(74,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(75,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(76,0,null,null,1,"a",[["href","https://fortawesome.github.io/Font-Awesome/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Font-Awesome"])),(l()(),t.\u0275eld(78,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Iconic font and CSS toolkit"])),(l()(),t.\u0275eld(80,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(81,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(82,0,null,null,1,"a",[["href","https://jquery.com/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["JQuery"])),(l()(),t.\u0275eld(84,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["DOM traversal and manipulation, used only to support JQuery-Confirm, Toastr, and Bootstrap, since Angular primarily manages the DOM in this template"])),(l()(),t.\u0275eld(86,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(87,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(88,0,null,null,1,"a",[["href","https://github.com/myclabs/jquery.confirm"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["JQuery-Confirm"])),(l()(),t.\u0275eld(90,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Confirm dialogs for buttons and links"])),(l()(),t.\u0275eld(92,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(93,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(94,0,null,null,1,"a",[["href","https://github.com/Reactive-Extensions/RxJS"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["RxJs"])),(l()(),t.\u0275eld(96,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Used by Angular for implementing the asynchronous observable pattern instead of promises"])),(l()(),t.\u0275eld(98,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(99,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(100,0,null,null,1,"a",[["href","https://github.com/systemjs/systemjs/blob/master/docs/overview.md"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["SystemJS"])),(l()(),t.\u0275eld(102,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["JavaScript module loader"])),(l()(),t.\u0275eld(104,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(105,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(106,0,null,null,1,"a",[["href","https://codeseven.github.io/toastr/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Toastr"])),(l()(),t.\u0275eld(108,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Non-blocking notifications"])),(l()(),t.\u0275eld(110,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(111,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(112,0,null,null,1,"a",[["href","http://underscorejs.org/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Underscore"])),(l()(),t.\u0275eld(114,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Hundreds of useful functional programming helpers"])),(l()(),t.\u0275eld(116,0,null,null,1,"h3",[["id","serverLibraries"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Server Libraries"])),(l()(),t.\u0275ted(-1,null,[" Below is a list of the main server side libraries used in this template, and links to where you can learn more about them."])),(l()(),t.\u0275eld(119,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(120,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(121,0,null,null,68,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(122,0,null,null,67,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(123,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(124,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(125,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Library"])),(l()(),t.\u0275eld(127,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(129,0,null,null,60,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(130,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(131,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(132,0,null,null,1,"a",[["href","https://www.npmjs.com/package/concurrently"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Concurrently"])),(l()(),t.\u0275eld(134,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Run multiple commands concurrently. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(136,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(137,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(138,0,null,null,1,"a",[["href","http://gulpjs.com/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Gulp"])),(l()(),t.\u0275eld(140,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Task runner focused on stream based workflows. Smaller libraries are used with Gulp such as del, merge2, minify-css, sourcemaps, typescript, uglify, and util. These libraries all work together to build powerful workflows and automations. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(142,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(143,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(144,0,null,null,1,"a",[["href","http://jasmine.github.io/2.4/introduction.html"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Jasmine"])),(l()(),t.\u0275eld(146,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["JavaScript unit testing"])),(l()(),t.\u0275eld(148,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(149,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(150,0,null,null,1,"a",[["href","https://karma-runner.github.io/0.13/index.html"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Karma"])),(l()(),t.\u0275eld(152,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Test runner used to tie any unit test tool (Jasmine in this template) to different browsers, and automate testing with any task runner (Gulp in this template)"])),(l()(),t.\u0275eld(154,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(155,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(156,0,null,null,1,"a",[["href","https://github.com/johnpapa/lite-server"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Lite-Server"])),(l()(),t.\u0275eld(158,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Lightweight development only node server that serves a web app, opens it in the browser, refreshes when html or javascript change, injects CSS changes using sockets, and has a fallback page when a route is not found. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(160,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(161,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(162,0,null,null,1,"a",[["href","https://github.com/tapio/live-server"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Live-Server"])),(l()(),t.\u0275eld(164,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Development server similar to lite-server, with live reload capability to accelerate development. Used in this application to re-run Jasmine tests whenever code files change. Using both lite and live server only to align with current Angular2.io recomendations. Plan to consolidate to one of the other in the future. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(166,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(167,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(168,0,null,null,1,"a",[["href","https://nodejs.org/en/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["NodeJS"])),(l()(),t.\u0275eld(170,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,['Lightweight and efficient, cross platform, event-driven, non-blocking server engine, and includes a package manager (NPM). Node must be installed, and packaged updated with "npm install" before using this template. All above listed server libraries use Node for their engine making them all cross platform.'])),(l()(),t.\u0275eld(172,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(173,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(174,0,null,null,1,"a",[["href","https://github.com/neenhouse/npm-flatten"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Npm-flatten"])),(l()(),t.\u0275eld(176,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Flattens node-modules folder into single level of dependencies fixing the issue with Windows limited path length. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(178,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(179,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(180,0,null,null,1,"a",[["href","https://www.typescriptlang.org/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["TypeScript"])),(l()(),t.\u0275eld(182,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Types superset of JavaScript that compiles to JavaScript. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(184,0,null,null,5,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(185,0,null,null,2,"td",[],null,null,null,null,null)),(l()(),t.\u0275eld(186,0,null,null,1,"a",[["href","https://www.npmjs.com/package/typings"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Typings"])),(l()(),t.\u0275eld(188,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["TypeScript definition manager. Definitions are used to add intellisense and support syntax checking for development tools such as Visual Studio code. This should be installed globally (npm install -g)."])),(l()(),t.\u0275eld(190,0,null,null,1,"h3",[["id","gulpCommands"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Gulp Commands"])),(l()(),t.\u0275ted(-1,null,[" All of these commands can be run from inside Visual Studio Code by typing \u201cControl+P\u201d then typing task and selecting from the dropdown list. These commands can also be run from the console by preceding them with the name \u201cgulp\u201d (example: gulp test)"])),(l()(),t.\u0275eld(193,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(194,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(195,0,null,null,48,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(196,0,null,null,47,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(197,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(198,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(199,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Command"])),(l()(),t.\u0275eld(201,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(203,0,null,null,40,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(204,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(205,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["build"])),(l()(),t.\u0275eld(207,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Compiles TypeScript to minified JavaScript while also creating source maps. All TypeScript files are left in the wwwroot folder with the deployed JS files as an Angular best practice, keeping all related files together simplifying both development and client side debugging."])),(l()(),t.\u0275eld(209,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(210,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["clean"])),(l()(),t.\u0275eld(212,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Removes all files from the \u201cwwwroot\u201d folder that originated from a Node or Bower package including CSS, declaration (d.ts), fonts, JavaScript, and map files. Also removes all files compiled from application source leaving behind only the original TypeScript, HTML, and CSS files."])),(l()(),t.\u0275eld(214,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(215,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["copyFiles"])),(l()(),t.\u0275eld(217,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Copies files from \u201cnode_modules\u201d to their required destination folders under \u201cwwwroot\u201d. The only files copied are those explicitly required by the application. As third party CSS, font, or JavaScript files are needed by the client browser, these need to be added to the \u201cgulpfile.js\u201d variables cssToMove, fontsToMove, or jsToMove respectively."])),(l()(),t.\u0275eld(219,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(220,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["rebuild"])),(l()(),t.\u0275eld(222,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Removes unneeded files from the \u201cwwwroot\u201d folder, refreshes package files, then compiles all TypeScript files into minified JavaScript and their associated map files. More specifically, this task executes the Gulp \u201cclean\u201d process then when complete executes both the \u201ccopyFiles\u201d, and \u201cbuild\u201d processes in parallel."])),(l()(),t.\u0275eld(224,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(225,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["test"])),(l()(),t.\u0275eld(227,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Executes a Gulp \u201cbuild\u201d process followed by execution of all existing unit tests. Unit tests should be in the same folder as the component they test, and be named with the same name as the test, but ending in \u201cspec.ts\u201d. This task will output the number of tests run, how many were successful, how many failed, and the reason for each failure. You can look in the services or pipes folder for examples of spec file naming standards and overall usage best practices. The files named \u201cuser.serivce.spec.ts\u201d shows a good example on how to test components that have direct injection dependencies."])),(l()(),t.\u0275eld(229,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(230,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["watch"])),(l()(),t.\u0275eld(232,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Executes the \u201cbuild\u201d task followed by the \u201ctest\u201d task, then watches all TypeScript files for changes automatically re-compiling and re-testing them as needed."])),(l()(),t.\u0275eld(234,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(235,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["copyProd"])),(l()(),t.\u0275eld(237,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Removes all files and folders from the \u201cbuild\u201d folder and then replaces them with an exact copy of \u201cwwwroot\u201d"])),(l()(),t.\u0275eld(239,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(240,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["buildProd"])),(l()(),t.\u0275eld(242,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Copies only the minimal files needed for a production deployment from the \u201cwwwroot\u201d folder to the \u201cbuild\u201d folder. TypeScript, declaration, and map files will not be included, leaving only minified css, JavaScript, and standard HTML. The plan is to also minify the HTML also in the future."])),(l()(),t.\u0275eld(244,0,null,null,1,"h3",[["id","npmCommands"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["NPM Commands"])),(l()(),t.\u0275ted(-1,null,[" Node Package Manager (NPM) can also execute tasks but we should defer to Gulp whenever possible. These commands can be run from the console by preceding them with the name \u201cnpm\u201d (example: npm install)"])),(l()(),t.\u0275eld(247,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(248,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(249,0,null,null,28,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(250,0,null,null,27,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(251,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(252,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(253,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Command"])),(l()(),t.\u0275eld(255,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(257,0,null,null,20,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(258,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(259,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["install"])),(l()(),t.\u0275eld(261,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Reads the \u201cpackage.json\u201d file, identifies all node packages required by the project, then pulls them down from the Internet and places them (including all dependencies) into the \u201cnode_modules\u201d folder. Packages are not added to version control, so this command should be run whenever the packages within \u201cpackage.json\u201d changes. This command is idempotent so it is safe to run at any time and will not re-download packages that already exist and have not changed."])),(l()(),t.\u0275eld(263,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(264,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["postinstall"])),(l()(),t.\u0275eld(266,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Installs or updates configured TypeScript definition files after all node modules have been installed or updated."])),(l()(),t.\u0275eld(268,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(269,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["start"])),(l()(),t.\u0275eld(271,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,['Executes the Gulp \u201cwatch\u201d to ensure all files are compiles and tested, then launches a lightweight Node server names BrowserSync that hosts the application and watches all CSS, JavaScript, and HTML files for changes. If any TypeScript files change, the Gulp task will recompile and retest them. The recompile to JavaScript is noticed by BrowserSync, and all connected browsers are automatically refreshed. This command also launches the "test" command for Jasmine unit-test monitoring in a separate browser tab. Connected browsers are refreshed when code changes are saved. This is one of the most commonly used commands allowing for rapid development and testing.'])),(l()(),t.\u0275eld(273,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(274,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["test"])),(l()(),t.\u0275eld(276,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Launches Jamine unit testing URL separate from the application."])),(l()(),t.\u0275eld(278,0,null,null,1,"h3",[["id","karmaCommands"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Karma Commands"])),(l()(),t.\u0275ted(-1,null,[" Karma is a unit test runner currently configured to use Jasmine for unit testing, and Chrome as the test browser. Karma is executed as part of several existing Gulp tasks, but also can be run from the console by preceding it with the name \u201ckarma\u201d (example: karma start). Karma is configured from the file \u201ckarma.config.js\u201d where it loads all files needed to support the unit test. When adding any 3rd party libraries to the application, make sure to also add them to the Karma configuration file. Karma also uses a file named \u201ckarma-test-shim.js\u201d where it sets Jasmine timeouts and path information along with preparing the SystemJS library for module importing. "])),(l()(),t.\u0275eld(281,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(282,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(283,0,null,null,13,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(284,0,null,null,12,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(285,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(286,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(287,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Command"])),(l()(),t.\u0275eld(289,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(291,0,null,null,5,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(292,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(293,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["start"])),(l()(),t.\u0275eld(295,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Starts execution of all discovered unity tests (files ending in \u201cspec.ts\u201d). It is usually recommended to use the Gulp task \u201ctest\u201d as it ensures all files are compiled before executing any tests, but sometime if you know all files are compiled, it is faster to just directly execute karma start."])),(l()(),t.\u0275eld(297,0,null,null,1,"h3",[["id","vsCodeCommands"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Visual Studio Code Commands"])),(l()(),t.\u0275ted(-1,null,[" Visual Studio Code supports hundreds of keyboard shortcuts that are all customizable from the menu item \u201cFile > Preferences > Keyboard Shortcuts\u201d. A few of the frequently used keyboard shortcuts are listed here for those less familiar with Visual Studio Code. "])),(l()(),t.\u0275eld(300,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(301,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(302,0,null,null,83,"div",[["class","table-responsive"]],null,null,null,null,null)),(l()(),t.\u0275eld(303,0,null,null,82,"table",[["class","table table-striped table-hover"]],null,null,null,null,null)),(l()(),t.\u0275eld(304,0,null,null,5,"thead",[],null,null,null,null,null)),(l()(),t.\u0275eld(305,0,null,null,4,"tr",[["class","success"]],null,null,null,null,null)),(l()(),t.\u0275eld(306,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Command"])),(l()(),t.\u0275eld(308,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Description"])),(l()(),t.\u0275eld(310,0,null,null,75,"tbody",[],null,null,null,null,null)),(l()(),t.\u0275eld(311,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(312,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["F1"])),(l()(),t.\u0275eld(314,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Show all commands"])),(l()(),t.\u0275eld(316,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(317,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Alt+Click"])),(l()(),t.\u0275eld(319,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Create multiple cursors where any keystrokes are applied to all active cursors"])),(l()(),t.\u0275eld(321,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(322,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+2"])),(l()(),t.\u0275eld(324,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Opens a vertical split and second window. Can also do Control+3, etc. for more windows."])),(l()(),t.\u0275eld(326,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(327,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+B"])),(l()(),t.\u0275eld(329,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Toggles opening and closing the sidebar"])),(l()(),t.\u0275eld(331,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(332,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+K then Ctrl+C"])),(l()(),t.\u0275eld(334,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Comments out selected rows"])),(l()(),t.\u0275eld(336,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(337,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+K then Ctrl+U"])),(l()(),t.\u0275eld(339,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Uncomments selected rows"])),(l()(),t.\u0275eld(341,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(342,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+P"])),(l()(),t.\u0275eld(344,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,['Show custom commands such as gulp tasks when followed by "task " to get a dropdown list of tasks'])),(l()(),t.\u0275eld(346,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(347,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+S"])),(l()(),t.\u0275eld(349,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Save current file"])),(l()(),t.\u0275eld(351,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(352,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+Alt+F"])),(l()(),t.\u0275eld(354,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Format code"])),(l()(),t.\u0275eld(356,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(357,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+Shift+C"])),(l()(),t.\u0275eld(359,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Opens a comand prompt external to VS code"])),(l()(),t.\u0275eld(361,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(362,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+~"])),(l()(),t.\u0275eld(364,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Opens a comand prompt internal to VS code"])),(l()(),t.\u0275eld(366,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(367,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+Space"])),(l()(),t.\u0275eld(369,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Trigger suggestion (intellisense)"])),(l()(),t.\u0275eld(371,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(372,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+Tab"])),(l()(),t.\u0275eld(374,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Switch between recently accessed files"])),(l()(),t.\u0275eld(376,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(377,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+]"])),(l()(),t.\u0275eld(379,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Indent selected rows"])),(l()(),t.\u0275eld(381,0,null,null,4,"tr",[],null,null,null,null,null)),(l()(),t.\u0275eld(382,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Ctrl+["])),(l()(),t.\u0275eld(384,0,null,null,1,"td",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Outdent selected rows"])),(l()(),t.\u0275eld(386,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,[" Visual Studio Code also supports customizing settings at either the workspace or user level. This project has some custom settings designed at improving the development experience. Feel free to override these workspace settings with your own custom user settings, but do not update the workspace settings directly as they are the recommended defaults are managed along with the rest of the application through version control."])),(l()(),t.\u0275eld(388,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(389,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,[" The basic customizations made are to hide JavaScript files where there is a Typescript file of the same name, and to hide map files. These changes simplify the Explorer view cleaner making it quicker to find the important editable files. Some minor additional customizations were also added to automatically format code while typing and to remove trailing whitespace and enforce the requirement for semicolons on each line."])),(l()(),t.\u0275eld(391,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(392,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(393,0,null,null,1,"h3",[["id","gitBranching"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["Git Version Control Branching Recomendations"])),(l()(),t.\u0275ted(-1,null,[" It is recommended that this application follow a hybrid approach between "])),(l()(),t.\u0275eld(396,0,null,null,1,"a",[["href","http://nvie.com/posts/a-successful-git-branching-model/"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["git-flow"])),(l()(),t.\u0275ted(-1,null,[" and "])),(l()(),t.\u0275eld(399,0,null,null,1,"a",[["href","http://scottchacon.com/2011/08/31/github-flow.html"]],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,["github-hub"])),(l()(),t.\u0275ted(-1,null,[", mainly sticking to the git-flow model only because of an existing strategy around continuous integration with multiple the multiple environments (dev, qa, staing, and production). Like git-flow, there will be a branch maintained for each permanent hosting environment (usually dev, qa. staging, and production). If you have read git-flow, the \u201cqa\u201d and \u201cstaging\u201d branches can be thought of as that document\u2019s \u201crelease\u201d branches. The production branch will always be called \u201cmaster\u201d and it should always be in a production ready state. Anytime an environment branch is updated, continuous integration should immediately update its respective hosting environment."])),(l()(),t.\u0275eld(402,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(403,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275ted(-1,null,[" New feature branches should be created from the \u201cdev\u201d branch and merged back into the \u201cdev\u201d branch when ready for integration testing. When QA is ready to test a new release, the \u201cdev\u201d branch can be merged into the \u201cqa\u201d branch. Any bugs found in QA would be fixed in its own branch cloned from \u201cqa\u201d, and when complete pushed back to both the \u201cqa\u201d and \u201cdev\u201d branches. Likewise, any bugs fixed in the \u201cmaster\u201d branch would have to also be merged into the other environment branches."])),(l()(),t.\u0275eld(405,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(406,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(407,0,null,null,0,"br",[],null,null,null,null,null)),(l()(),t.\u0275eld(408,0,null,null,0,"br",[],null,null,null,null,null))],null,null)}function i(l){return t.\u0275vid(0,[(l()(),t.\u0275eld(0,0,null,null,1,"help-home",[],null,null,null,r,a)),t.\u0275did(1,245760,null,0,d.HelpHomeComponent,[o.ActivatedRoute,o.Router],null,null)],function(l,n){l(n,1,0)},null)}n.RenderType_HelpHomeComponent=a,n.View_HelpHomeComponent_0=r,n.View_HelpHomeComponent_Host_0=i,n.HelpHomeComponentNgFactory=t.\u0275ccf("help-home",d.HelpHomeComponent,i,{},{},[])}}]);
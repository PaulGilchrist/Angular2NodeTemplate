{"version":3,"sources":["app/services/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,2BAA2B,iBAAiB,CAAC,CAAA;AAC7C,QAAO,wBAAwB,CAAC,CAAA;AAGhC,+BAA0B,0BAA0B,CAAC,CAAA;AAErD,2BAAsB,sBAAsB,CAAC,CAAA;AAG7C;IAAA;QACI,+CAA+C;QAC/C,6JAA6J;QAE7J,kBAAkB;QACX,UAAK,GAAW,kBAAK,CAAC,CAAC,oBAAoB;QAClD,mBAAmB;QACnB,eAAU,GAAc,0BAAS,CAAC,CAAC,wBAAwB;IAuB/D,CAAC;IArBU,8BAAQ,GAAf;QACI,oDAAoD;QACpD,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAEM,sCAAgB,GAAvB,UAAwB,IAAU;QAC9B,oDAAoD;QACpD,iEAAiE;QACjE,IAAI,aAAa,GAAc,EAAE,CAAE;QACnC,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC9C,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7C,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC3C,CAAC;gBACL,CAAC;YACL,CAAC;QACL,CAAC;QACD,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IA7BL;QAAC,iBAAU,EAAE;;mBAAA;IA+Bb,kBAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,mBAAW,cA8BvB,CAAA","file":"app/services/user.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\n\r\nimport { Address } from '../models/address.model';\r\nimport { ADDRESSES } from './../data/addresses.data';\r\nimport { User } from '../models/user.model';\r\nimport { USERS } from './../data/users.data';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    //This is a mock version of api-user.service.ts\r\n    //To use the actual API, rename this file to \"mock-user.service.ts\"\" and rename \"api-user.service.ts\"\" to just \"user.service.ts\", then rebuild (gulp rebuild)\r\n\r\n    //public variables\r\n    public users: User[] = USERS; //Full list of users\r\n    //private variables\r\n    _addresses: Address[] = ADDRESSES; //Full list of addresses\r\n\r\n    public getUsers(): Observable<User[]> {\r\n        //We already have the data so simulate an async call\r\n        return Observable.of(this.users);\r\n    }\r\n\r\n    public getUserAddresses(user: User): Observable<Address[]> {\r\n        //We already have the data so simulate an async call\r\n        //Reduce the result down to just the addresses for the given user\r\n        var userAddresses: Address[] = [] ;\r\n        if(user.addresses && this._addresses) {\r\n            for (let i = 0; i < user.addresses.length; i++) {\r\n                for (let j = 0; j < this._addresses.length; j++) {\r\n                    if(user.addresses[i] === this._addresses[j].id) {\r\n                        userAddresses.push(this._addresses[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Observable.of(userAddresses);\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}
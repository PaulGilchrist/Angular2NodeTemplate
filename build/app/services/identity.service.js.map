{"version":3,"sources":["app/services/identity.service.ts"],"names":[],"mappings":"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","file":"app/services/identity.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers } from '@angular/http';\r\n\r\nimport { CONFIG } from '../data/config.data';\r\n\r\n@Injectable()\r\nexport class IdentityService {\r\n    //Public variables\r\n    public id_token: any;\r\n    public refreshTimer: any;\r\n    public token: any;\r\n\r\n    //Private variables\r\n    _authProvider = CONFIG.authProvider;\r\n    _expireOffsetMilliseconds: number = 30*60*1000;\r\n    _renewInProgress: boolean = false;\r\n    _state: string = null;\r\n\r\n    //Public functions\r\n    public clearToken(): void {\r\n        //Stop auto renewal of token\r\n\t\tclearInterval(this.refreshTimer);\r\n\t\t//Use state randonly generated data to protect against cross-site request forgery\r\n\t\tlocalStorage.removeItem(\"id_token\");\r\n\t\tthis.id_token = null;\r\n\t\t//We can not remove the token object as it might be bound.\r\n\t\t//m.token = null;\r\n\t\tlocalStorage.removeItem(\"state\");\r\n\t\tthis._state = null;\r\n    }\r\n\r\n    public appendAuthHeader(headers: Headers): any {\r\n        //Will pass an expired header if that is all we have\r\n        if(this.id_token) {\r\n            headers.append('Authorization', 'Bearer ' + this.id_token);\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    public getToken(): void {\r\n\t\t//Save current URL to local storage before redirecting through the OAuth implicit flow process\r\n\t\tlocalStorage.setItem(\"redirectUrl\", location.href);\r\n\t\t//Get a new token even if the current one has not yet expired\r\n\t\tvar url: string = null;\r\n\t\t//Use state randonly generated data to protect against cross-site request forgery\r\n\t\tthis._state = this.getUuid();\r\n\t\tlocalStorage.setItem(\"state\", this._state);\r\n\t\t//Setup url\r\n\t\tif(this._authProvider.name == \"AzureAD\") {\r\n\t\t\turl = this._authProvider.authUrl + \"?response_type=id_token&client_id=\" + this._authProvider.clientId + \"&redirect_uri=\" + encodeURIComponent(this._authProvider.redirectUrl) + \"&state=\" + this._state + \"&nonce=\" + this._state;\r\n\t\t} else if (this._authProvider.name == \"Google\") {\r\n\t\t\turl = this._authProvider.authUrl + \"?scope=\" + encodeURIComponent(\"openid email\") + \"&response_type=id_token&client_id=\" + this._authProvider.clientId + \"&redirect_uri=\" + encodeURIComponent(this._authProvider.redirectUrl) + \"&state=\" + this._state;\r\n\t\t};\r\n\t\tif(url != null) {\r\n\t\t\t\twindow.location.replace(url);\r\n\t\t}\r\n    }\r\n\r\n    public isTokenValid(): boolean {\r\n\t\t//Returns true if token exists and has not yet expired\r\n\t\tvar isTokenValid = false;\r\n\t\t//Check to see if token is in memory\r\n\t\tif(this.id_token == null) {\r\n\t\t\t//Token is not in memory, but may be in local storage\r\n\t\t\tthis.id_token = localStorage.getItem(\"id_token\");\r\n\t\t\tif(this.id_token != null) {\r\n\t\t\t\tthis.token = this.extractToken(this.id_token);\r\n\t\t\t\t//Set the token refresh timer\r\n\t\t\t\tif(this.refreshTimer == null) {\r\n\t\t\t\t\tthis.refreshTimer = setInterval(this.renewToken, this._expireOffsetMilliseconds); //If the token gets within 30 minutes of expiring (usual half life), then try and refresh it\r\n\t\t\t\t\t//this.refreshTimer = setInterval(this.renewToken, 120000); //2 minutes\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.id_token != null) {\r\n\t\t\t//We have a token, but still need to check it is not expired\r\n\t\t\tvar expireDate = new Date(this.token.exp * 1000);\r\n\t\t\tvar now = new Date();\r\n\t\t\tif(expireDate < now) {\r\n\t\t\t\t//The token is expired so remove it from memory and local storage\r\n\t\t\t\tthis.clearToken();\r\n\t\t\t} else {\r\n\t\t\t\t//Both scenarios of renewing the token or using the existing token are both valid\r\n\t\t\t\tisTokenValid = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn isTokenValid;\r\n    }\r\n\r\n    public renewToken(): void {\r\n\t\tvar _self = this;\r\n\t\t//Renew existing token before it expires\r\n\t\tconsole.log(\"identitySvc.renewToken()\");\r\n\t\t//Assumes the current token is still valid and uses its information for hints to prevent login UI\r\n\t\tif(!this._renewInProgress && this.isTokenValid()) {\r\n\t\t\tthis._renewInProgress = true;\r\n\t\t\tthis._state = this.getUuid();\r\n\t\t\tlocalStorage.setItem(\"state\", this._state);\r\n\t\t\tvar uri: string = null;\r\n\t\t\t//Setup uri\r\n\t\t\tif(this._authProvider.name == \"AzureAD\") {\r\n\t\t\t\turi = this._authProvider.authUrl + \"?response_type=id_token&client_id=\" + this._authProvider.clientId  + \"&redirect_uri=\" + encodeURIComponent(this._authProvider.redirectUrl) + \"&state=\" + this._state + \"&nonce=\" + this._state;\r\n\t\t\t\turi += '&prompt=none&login_hint=' + encodeURIComponent(this.getLoginHint()) + '&domain_hint=' + encodeURIComponent(this.getDomainHint());\r\n\t\t\t} else if (this._authProvider.name == \"Google\") {\r\n\t\t\t\t//Google token does not give user email informaiton so there is no login or domain hints\r\n\t\t\t\turi = this._authProvider.authUrl + \"?scope=email&response_type=id_token&client_id=\" + this._authProvider.clientId  + \"&redirect_uri=\" + encodeURIComponent(this._authProvider.redirectUrl) + \"&state=\" + this._state + \"&nonce=\" + this._state;\r\n\t\t\t\turi += '&prompt=none&login_hint=' + encodeURIComponent(this.getLoginHint());\r\n\t\t\t}\r\n\t\t\tif(uri != null) {\r\n\t\t\t\t//We do not want the iFrame to redirect to anywhere after getting a token or it would launch a 2nd copy of the application unneccessarily\r\n\t\t\t\tlocalStorage.removeItem(\"redirectUrl\");\r\n\t\t\t\t//Do not redirect the current page, but rather make the call in an iframe since a refresh has no UI, and we want to stay on the current page\r\n\t\t\t\tvar frameHandle = this.addIFrame(\"tokenRenewFrame\");\r\n\t\t\t\tframeHandle.src = 'about:blank';\r\n\t\t\t\tthis.loadFrame(uri, \"tokenRenewFrame\");\r\n\t\t\t\t//Wait then try and reload the token from local storage\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t_self._renewInProgress = false;\r\n\t\t\t\t\t//If the renew succeeds, memory will be updated with the new token\r\n\t\t\t\t\t//If the renew fails, the old token should still be valid for several more minutes, so it will be reloaded into local storage\r\n\t\t\t\t\t_self.id_token = localStorage.getItem(\"id_token\");\r\n\t\t\t\t\tif(_self.id_token != null) {\r\n\t\t\t\t\t\t_self.token = _self.extractToken(_self.id_token);\r\n\t\t\t\t\t\tconsole.log('Token renewed successfully.  New expiration = ' + new Date(_self.token.exp * 1000));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log('Token renewal failed.  Expiration = ' + new Date(_self.token.exp * 1000));\r\n\t\t\t\t\t\t//Try again in 5 minutes\r\n\t\t\t\t\t\tsetTimeout(_self.renewToken, 300000);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 60000); //Give a minute for the renewal to complete before pulling the renewed token\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    base64DecodeStringUrlSafe(base64IdToken: string): string {\r\n\t\t// html5 should support atob function for decoding\r\n\t\tif (window.atob) {\r\n\t\t\treturn window.atob(base64IdToken);\r\n\t\t}\r\n\t\t// TODO add support for this\r\n\t\tconsole.log('Browser is not supported');\r\n\t\treturn null;\r\n    }\r\n\r\n    decodeJwt(jwtToken: string): any {\r\n\t\tvar idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n\t\tvar matches = idTokenPartsRegex.exec(jwtToken);\r\n\t\tif (!matches || matches.length < 4) {\r\n\t\t\tconsole.log('The returned token is not parseable.');\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar crackedToken = {\r\n\t\t\theader: matches[1],\r\n\t\t\tpayload: matches[2],\r\n\t\t\tsignature: matches[3]\r\n\t\t};\r\n\t\treturn crackedToken;\r\n    }\r\n\r\n    base64Decode(encodedBase64: string): any {\r\n\t\ttry {\r\n\t\t\tvar base64Decoded = this.base64DecodeStringUrlSafe(encodedBase64);\r\n\t\t\tif (!base64Decoded) {\r\n\t\t\t\tconsole.log('identity.base64Decode -> Could not be base64 url safe decoded.');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// ECMA script has JSON built-in support\r\n\t\t\treturn JSON.parse(base64Decoded);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('identity.base64Decode -> Could not be decoded: ' + err.stack);\r\n\t\t}\r\n\t\treturn null;\r\n    }\r\n\r\n    extractHeader(jwtToken: string): any {\r\n\t\t// id token will be decoded to get the username\r\n\t\tvar decodedJwt = this.decodeJwt(jwtToken);\r\n\t\tif(decodedJwt) {\r\n\t\t\treturn this.base64Decode(decodedJwt.header);\r\n\t\t}\r\n\t\treturn null;\r\n    }\r\n\r\n    extractSignature(jwtToken: string): any {\r\n\t\t// id token will be decoded to get the username\r\n\t\tvar decodedJwt = this.decodeJwt(jwtToken);\r\n\t\tif(decodedJwt) {\r\n\t\t\treturn this.base64Decode(decodedJwt.signature);\r\n\t\t}\r\n\t\treturn null;\r\n    }\r\n\r\n    extractToken(encodedToken: string): any {\r\n\t\t// id token will be decoded to get the username\r\n\t\tvar decodedToken = this.decodeJwt(encodedToken);\r\n\t\tvar base64Token: string = null;\r\n\t\tif(decodedToken) {\r\n\t\t\tbase64Token = decodedToken.payload;\r\n\t\t} else {\r\n\t\t\tbase64Token = encodedToken;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tvar base64Decoded = this.base64DecodeStringUrlSafe(base64Token);\r\n\t\t\tif (!base64Decoded) {\r\n\t\t\t\tconsole.log('The returned token could not be base64 url safe decoded.');\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\t// ECMA script has JSON built-in support\r\n\t\t\treturn JSON.parse(base64Decoded);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('The returned token could not be decoded: ' + err.stack);\r\n\t\t}\r\n\t\treturn null;\r\n    }\r\n\r\n    getDomainHint(): string {\r\n\t\tif (this.token && this.token.upn && this.token.upn.indexOf('@') > -1) {\r\n\t\t\tvar parts: string = this.token.upn.split('@');\r\n\t\t\t// local part can include @ in quotes. Sending last part handles that.\r\n\t\t\treturn parts[parts.length - 1];\r\n\t\t}\r\n\t\treturn '';\r\n    }\r\n\r\n    getLoginHint(): string {\r\n\t\tvar login_hint: string = '';\r\n\t\tif(this._authProvider.name == \"AzureAD\") {\r\n\t\t\tif(this.token && this.token.upn) {\r\n\t\t\t\tlogin_hint = this.token.upn;\r\n\t\t\t}\r\n\t\t} else if(this._authProvider.name == \"Google\") {\r\n\t\t\tif(this.token && this.token.email) {\r\n\t\t\t\tlogin_hint = this.token.email;\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn login_hint;\r\n    }\r\n\r\n    getUuid(): string {\r\n\t\t//Generate an RFC4122 version 4 UUID\r\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t\t\tvar r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n\t\t\treturn v.toString(16);\r\n\t\t});\r\n    }\r\n\r\n    public addIFrame(iframeId: string): HTMLIFrameElement {\r\n\t\tlet iFrame: HTMLIFrameElement = <HTMLIFrameElement>document.getElementById(iframeId);\r\n\t\tif (!iFrame) {\r\n\t\t\tif (document.createElement && document.documentElement && (window.navigator.userAgent.indexOf('MSIE 5.0') === -1)) {\r\n\t\t\t\tvar ifr = document.createElement('iframe');\r\n\t\t\t\tifr.setAttribute('id', iframeId);\r\n\t\t\t\tifr.style.visibility = 'hidden';\r\n\t\t\t\tifr.style.position = 'absolute';\r\n\t\t\t\tifr.style.width = ifr.style.height = ifr.border = '0px';\r\n\t\t\t\tiFrame = <HTMLIFrameElement>(document.getElementsByTagName('body')[0].appendChild(ifr));\r\n\t\t\t} else if (document.body && document.body.insertAdjacentHTML) {\r\n\t\t\t\tdocument.body.insertAdjacentHTML('beforeEnd', '<iframe name=\"' + iframeId + '\" id=\"' + iframeId + '\" style=\"display:none\"></iframe>');\r\n\t\t\t}\r\n\t\t\tif (window.frames && window.frames[iframeId]) {\r\n\t\t\t\tiFrame = window.frames[iframeId];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn iFrame;\r\n    }\r\n\r\n    removeIFrame(iframeId: string): void {\r\n\t\tvar iFrame: HTMLElement  = document.getElementById(iframeId);\r\n\t\tiFrame.parentNode.removeChild(iFrame);\r\n    }\r\n\r\n    loadFrame(url: string, iframeId: string): void {\r\n\t\t// This trick overcomes iframe navigation in IE\r\n\t\t// IE does not load the page consistently in iframe\r\n\t\tvar _self = this;\r\n\t\tsetTimeout(function () {\r\n\t\t\tvar frameHandle = _self.addIFrame(iframeId);\r\n\t\t\tif (frameHandle.src === '' || frameHandle.src === 'about:blank') {\r\n\t\t\t\tframeHandle.src = url;\r\n\t\t\t\t_self.loadFrame(url, iframeId);\r\n\t\t\t}\r\n\t\t}, 500);\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}
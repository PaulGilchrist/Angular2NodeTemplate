{"version":3,"sources":["app/login/token.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuB,iBAAiB,CAAC,CAAA;AACzC,uBAAyB,iBAAkB,CAAC,CAAA;AAE5C,iCAAgC,gCAAgC,CAAC,CAAA;AAQjE;IAII,wBAAoB,SAAmB,EAAU,OAAe,EAAU,gBAAiC;QAAvF,cAAS,GAAT,SAAS,CAAU;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAiB;QAH3G,UAAK,GAAQ,IAAI,CAAC;QAClB,aAAQ,GAAQ,IAAI,CAAC;IAEyF,CAAC;IAE/G,iCAAQ,GAAR;QACG,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;YACzC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;YAC9E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;IACC,CAAC;;IAEJ,sCAAa,GAAb,UAAc,GAAW;QACxB,IAAI,YAAY,GAAW,EAAE,CAAC;QAC9B,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;YACR,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,YAAY,CAAC;IACrB,CAAC;;IAED,+BAAM,GAAN;QACC,iDAAiD;QACjD,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;QACnC,kFAAkF;QAC5E,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,8BAAK,GAAL;QACC,kDAAkD;QAClD,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;QACnC,6EAA6E;IAC9E,CAAC;;IAxCF;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,gCAAgC;SAChD,CAAC;;sBAAA;IAsCF,qBAAC;AAAD,CArCA,AAqCC,IAAA;AArCY,sBAAc,iBAqC1B,CAAA","file":"app/login/token.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common' ;\r\n\r\nimport { IdentityService } from './../services/identity.service';\r\n\r\ndeclare var toastr:any;\r\n\r\n@Component({\r\n    selector: 'my-token',\r\n    templateUrl: 'app/login/token.component.html'\r\n})\r\nexport class TokenComponent implements OnInit {\r\n    token: any = null;\r\n    id_token: any = null;\r\n\r\n    constructor(private _location: Location, private _router: Router, private _identityService: IdentityService) {}\r\n\r\n    ngOnInit(): void {\r\n      \tif(this._identityService.isTokenValid()) {\r\n\t\t\tthis.token = this._identityService.token;\r\n\t\t\tthis.token.displayName = this.token.given_name + ' ' + this.token.family_name;\r\n\t\t\tthis.id_token = this._identityService.id_token;\r\n\t\t} else {\r\n\t\t\ttoastr.error('Not logged in');\r\n\t\t\tthis._location.go('/main');\r\n\t\t}\r\n    };\r\n\r\n\tgetDateString(num: number): string {\r\n\t\tlet returnString: string = '';\r\n\t\tif(num) {\r\n\t\t\treturnString = num + ' (' + new Date(num * 1000) + ')';\r\n\t\t}\r\n\t\treturn returnString;\r\n\t};\r\n\r\n\tlogout(): void {\r\n\t\t//Remove token from both memory and local storage\r\n\t\tthis._identityService.clearToken();\r\n\t\t//Redirect back to the home page now that there is no longer token info to display\r\n        this._router.navigate(['home']);\r\n\t}\r\n\r\n\trenew(): void {\r\n\t\t//Test renewing a currently valid token without UI\r\n\t\tthis._identityService.renewToken();\r\n\t\t//Should refresh the screen after a second (or after token has been replaced)\r\n\t};\r\n}"],"sourceRoot":"/source/"}
{"version":3,"sources":["app/nav/nav-top.component.ts"],"names":[],"mappings":"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","file":"app/nav/nav-top.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common' ;\r\n\r\nimport { IdentityService } from '../services/identity.service';\r\n\r\ndeclare var toastr:any;\r\n\r\n@Component({\r\n    selector: 'nav-top',\r\n    styleUrls: ['app/nav/nav-top.component.css'],\r\n    templateUrl: 'app/nav/nav-top.component.html'\r\n})\r\nexport class TopNavComponent implements OnInit {\r\n\r\n    shrinkNavbar: boolean = false;\r\n\r\n    user: any = {\r\n        identity : {\r\n            isAuthenticated : false\r\n        }\r\n    };\r\n\r\n    constructor(private _location: Location, private _router: Router, private _identityService: IdentityService) {}\r\n\r\n    onScroll(event: any): void {\r\n        //Shrink the header top and bottom padding when scrolling beyond 300px\r\n        this.shrinkNavbar = ((window.pageYOffset || document.documentElement.scrollTop) > 300);\r\n    }\r\n\r\n\r\n    ngOnInit(): void {\r\n        this.user.identity.isAuthenticated = this._identityService.isTokenValid();\r\n\t\tif(this.user.identity.isAuthenticated) {\r\n\t\t\tthis.user.identity.name = this._identityService.token.name;\r\n\t\t} else {\r\n\t\t\tthis.user.identity.name = null;\r\n\t\t}\r\n    };\r\n\r\n    currentPage(path: string): boolean {\r\n        var result: boolean = false;\r\n        var locationPath = this._location.path();\r\n        if (path.length == 0) {\r\n            //Root\r\n            result = (locationPath.length == 0);\r\n        } else {\r\n           //Does the current path start with \"path\"?\r\n           result = (locationPath.indexOf(path) == 0);\r\n        }\r\n        return result;\r\n    }\r\n\r\n\tlogin(): void {\r\n\t\tif(!this._identityService.isTokenValid()) {\r\n            //No need to call this asyncronously because it will actually leave the website to redirect to the login server\r\n\t\t\tthis._identityService.getToken();\r\n\t\t} else {\r\n            this.user.identity.isAuthenticated = true;\r\n            this.user.identity.name = this._identityService.token.name;\r\n        };\r\n\t}\r\n\r\n\tlogout(): void {\r\n\t\tthis._identityService.clearToken();\r\n\t\tthis.user.identity.isAuthenticated = false;\r\n\t\tthis.user.identity.name = null;\r\n        this._router.navigate(['home']);\r\n\t}\r\n\r\n}"],"sourceRoot":"/source/"}
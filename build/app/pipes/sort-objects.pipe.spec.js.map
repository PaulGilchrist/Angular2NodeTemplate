{"version":3,"sources":["app/pipes/sort-objects.pipe.spec.ts"],"names":[],"mappings":";AAAA,wBAA8E,uBAAuB,CAAC,CAAA;AACtG,kCAA8B,qBAAqB,CAAC,CAAA;AAEpD,kBAAQ,CAAC,iBAAiB,EAAE;IACxB,YAAE,CAAC,+DAA+D,EAAE;QAChE,IAAI,eAAe,GAAG,IAAI,mCAAe,EAAE,CAAC;QAC5C,IAAI,gBAAgB,GAAG;YACnB,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;YAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE;YACnC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,gBAAgB,EAAE;YACvC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;YAChC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE;YACnC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE;SACpC,CAAC;QACF,IAAI,iBAAiB,GAAQ,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;QACxF,gBAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IACH,YAAE,CAAC,+DAA+D,EAAE;QAChE,IAAI,eAAe,GAAG,IAAI,mCAAe,EAAE,CAAC;QAC5C,IAAI,gBAAgB,GAAG;YACnB,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE;YAC7B,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE;YACnC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,gBAAgB,EAAE;YACvC,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE;YAChC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE;YACnC,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,SAAS,EAAE;SACpC,CAAC;QACF,IAAI,iBAAiB,GAAQ,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACvF,gBAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IACH,6BAA6B;IAC7B,2BAA2B;AAC/B,CAAC,CAAC,CAAC","file":"app/pipes/sort-objects.pipe.spec.js","sourcesContent":["import { describe, expect, beforeEach, it, inject, beforeEachProviders } from '@angular/core/testing';\r\nimport {SortObjectsPipe} from './sort-objects.pipe';\r\n\r\ndescribe('SortObjectsPipe', () => {\r\n    it('Object array sorted in ascending order based on name property', function () {\r\n        let sortObjectsPipe = new SortObjectsPipe();\r\n        let inputObjectArray = [\r\n            { name: 'Gary', job: 'Data' },\r\n            { name: 'Paul', job: 'Enterprise' },\r\n            { name: 'John', job: 'Infrastructure' },\r\n            { name: 'Rick', job: 'Network' },\r\n            { name: 'Brent', job: 'Solutions' },\r\n            { name: 'Jamie', job: 'Systems' }\r\n        ];\r\n        let outputObjectArray: any = sortObjectsPipe.transform(inputObjectArray, 'name', false);\r\n        expect(outputObjectArray[0].name).toEqual('Brent');\r\n    });\r\n    it('Object array sorted in decending order based on name property', function () {\r\n        let sortObjectsPipe = new SortObjectsPipe();\r\n        let inputObjectArray = [\r\n            { name: 'Gary', job: 'Data' },\r\n            { name: 'Paul', job: 'Enterprise' },\r\n            { name: 'John', job: 'Infrastructure' },\r\n            { name: 'Rick', job: 'Network' },\r\n            { name: 'Brent', job: 'Solutions' },\r\n            { name: 'Jamie', job: 'Systems' }\r\n        ];\r\n        let outputObjectArray: any = sortObjectsPipe.transform(inputObjectArray, 'name', true);\r\n        expect(outputObjectArray[0].name).toEqual('Rick');\r\n    });\r\n    //Add test for number sorting\r\n    //Add test for date sorting\r\n});\r\n"],"sourceRoot":"/source/"}